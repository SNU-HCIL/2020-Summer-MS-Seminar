/// <reference types="node" />
import { Writable } from "stream";
import { Diagnostic } from 'vscode-languageserver-protocol';
export interface Writer {
    start: (workspaceDir: string) => void;
    file: (d: Diagnostic[], workspaceDir: string, filename: string, text: string) => void;
    completion: (fileCount: number, errorCount: number, warningCount: number) => void;
    failure: (err: Error) => void;
}
export declare class HumanFriendlyWriter implements Writer {
    private stream;
    private isVerbose;
    constructor(stream: Writable, isVerbose?: boolean);
    start(workspaceDir: string): void;
    file(diagnostics: Diagnostic[], workspaceDir: string, filename: string, text: string): void;
    completion(_f: number, err: number, _w: number): void;
    failure(err: Error): void;
}
export declare class MachineFriendlyWriter implements Writer {
    private stream;
    constructor(stream: Writable);
    private log;
    start(workspaceDir: string): void;
    file(diagnostics: Diagnostic[], workspaceDir: string, filename: string, _text: string): void;
    completion(fileCount: number, errorCount: number, warningCount: number): void;
    failure(err: Error): void;
}
