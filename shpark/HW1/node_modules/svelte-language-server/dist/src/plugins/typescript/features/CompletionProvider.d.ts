import ts from 'typescript';
import { CompletionContext, Position, TextDocumentIdentifier } from 'vscode-languageserver';
import { Document } from '../../../lib/documents';
import { AppCompletionItem, AppCompletionList, CompletionsProvider } from '../../interfaces';
import { LSAndTSDocResolver } from '../LSAndTSDocResolver';
export interface CompletionEntryWithIdentifer extends ts.CompletionEntry, TextDocumentIdentifier {
    position: Position;
}
export declare class CompletionsProviderImpl implements CompletionsProvider<CompletionEntryWithIdentifer> {
    private readonly lsAndTsDocResovler;
    constructor(lsAndTsDocResovler: LSAndTSDocResolver);
    /**
     * The language service throws an error if the character is not a valid trigger character.
     * Also, the completions are worse.
     * Therefore, only use the characters the typescript compiler treats as valid.
     */
    private readonly validTriggerCharacters;
    private isValidTriggerCharacter;
    getCompletions(document: Document, position: Position, completionContext?: CompletionContext): Promise<AppCompletionList<CompletionEntryWithIdentifer> | null>;
    private toCompletionItem;
    private getCompletionLabelAndInsert;
    private isExistingSvelteComponentImport;
    resolveCompletion(document: Document, completionItem: AppCompletionItem<CompletionEntryWithIdentifer>): Promise<AppCompletionItem<CompletionEntryWithIdentifer>>;
    private getCompletionDocument;
    private codeActionChangesToTextEdit;
    private codeActionChangeToTextEdit;
    private mapRangeForNewImport;
    private offsetLinesAndMovetoStartOfLine;
    private isSvelteComponentImport;
    private changeSvelteComponentName;
}
