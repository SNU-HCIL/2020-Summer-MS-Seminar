import { Position, Range } from 'vscode-languageserver';
export interface TagInformation {
    content: string;
    attributes: Record<string, string>;
    start: number;
    end: number;
    startPos: Position;
    endPos: Position;
    container: {
        start: number;
        end: number;
    };
}
export declare function extractScriptTags(source: string): {
    script?: TagInformation;
    moduleScript?: TagInformation;
} | null;
export declare function extractStyleTag(source: string): TagInformation | null;
/**
 * Get the line and character based on the offset
 * @param offset The index of the position
 * @param text The text for which the position should be retrived
 */
export declare function positionAt(offset: number, text: string): Position;
/**
 * Get the offset of the line and character position
 * @param position Line and character position
 * @param text The text for which the offset should be retrived
 */
export declare function offsetAt(position: Position, text: string): number;
export declare function isInTag(position: Position, tagInfo: TagInformation | null): tagInfo is TagInformation;
export declare function isRangeInTag(range: Range, tagInfo: TagInformation | null): tagInfo is TagInformation;
export declare function getTextInRange(range: Range, text: string): string;
export declare function getLineAtPosition(position: Position, text: string): string;
/**
 * Updates a relative import
 *
 * @param oldPath Old absolute path
 * @param newPath New absolute path
 * @param relativeImportPath Import relative to the old path
 */
export declare function updateRelativeImport(oldPath: string, newPath: string, relativeImportPath: string): string;
